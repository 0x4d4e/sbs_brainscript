% Brainfuck interpreter/debugger in Postscript
%
% 
%
% Fabian Gr√ºnbichler - 0828562
% Matthias Neumayr 	 - 0825199
%

/max-size 30000 def




/read-file
%Stack: filename -- content
{ (r) file max-size string readstring true eq {(code zu lang) =} if } def


% 1st test, don't expect it to work ;)
/read-stdin { (%stdin) (r) file 2 string readstring stack true eq {(input error) =} if } def


% array value -- array(all elements set to value)
/init-array {
	exch dup 						% value arr arr
	3 1 roll 						% arr v arr
	dup 0 1 3 2 roll length 1 sub 	% a v a 0 1 l-1
	{ 								% a v a i
		2 copy 						% a v a i a i
		4 index 					% a v a i a i v
		put pop 					% a v a
	} for
	pop pop 						% a
} def


% (filename) -- array 0
/bf-read-file
{ read-file 0 } def


% -- tape 0
/bf-init-tape
{ max-size array 0 init-array 0 } def


/bf-run-file {
	bf-read-file	% (code) 0
	bf-init-tape	% (code) 0 tape 0
	%...
} def


% (code) -- 
/bf-run {
	0				% (code) 0
	bf-init-tape	% (code) 0 tape 0
	%...
} def